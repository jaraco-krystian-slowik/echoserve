name: Build and Test Gradle Project

on:
  push:
    branches:
      - feature/github-workflow
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-term-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'

      - name: Run build
        run: ./gradlew build

      - name: Upload JAR file
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: build/libs/application.jar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: Checkout project sources
          uses: actions/checkout@v4

        - name: Set up Gradle
          uses: gradle/actions/setup-gradle@v3
          with:
            build-scan-publish: true
            build-scan-term-of-use-url: 'https://gradle.com/terms-of-service'
            build-scan-terms-of-use-agree: 'yes'

        - name: Run tests
          run: ./gradlew test


  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: DOCKER_HUB_USER
          password: DOCKER_HUB_PWD

#      - name: Checkout project sources
#        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: application-jar
          path: build/libs

      - name: build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: jaracogmbh/echoserve:test
          # dockerhub url
